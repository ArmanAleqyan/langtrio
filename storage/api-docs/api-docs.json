{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "Description of my API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/create_agent": {
            "post": {
                "tags": [
                    "Admin Agents"
                ],
                "summary": "Create a new agent",
                "description": "Creates a new agent with the specified email, name, surname, and phone.",
                "operationId": "9923ccc68e09916685c3fc8d21e91d18",
                "requestBody": {
                    "description": "Agent details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Agent's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "name": {
                                        "description": "Agent's name",
                                        "type": "string"
                                    },
                                    "surname": {
                                        "description": "Agent's surname",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Agent's phone number",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Agent created successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/update_agent": {
            "post": {
                "tags": [
                    "Admin Agents"
                ],
                "summary": "Update agent information",
                "description": "Updates the information of an existing agent based on the provided agent_id.",
                "operationId": "118f1dd09b0bd32dd58f80f492ec6fd0",
                "requestBody": {
                    "description": "Agent details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "New email for the agent",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "name": {
                                        "description": "New name for the agent",
                                        "type": "string"
                                    },
                                    "surname": {
                                        "description": "New surname for the agent",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "New phone number for the agent",
                                        "type": "string"
                                    },
                                    "agent_id": {
                                        "description": "ID of the agent to update",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agent information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Agent updated successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/single_page_agent": {
            "get": {
                "tags": [
                    "Admin Agents"
                ],
                "summary": "Get information of a single agent",
                "description": "Retrieves information of a single agent based on the provided agent_id.",
                "operationId": "dd26ccd3dfde84a5fb0e762ad2f374ac",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "query",
                        "description": "ID of the agent to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Agent Not Found",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/all_agents": {
            "get": {
                "tags": [
                    "Admin Agents"
                ],
                "summary": "Get all agents with optional search",
                "description": "Retrieves a paginated list of all agents with optional search functionality.",
                "operationId": "bdcd5ee0babaee2a398fd36e91b61ee7",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search keyword to filter agents by name, surname, phone, or email",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/create_category": {
            "post": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category with the provided details.",
                "operationId": "a090d5ec28e5de32482531992444b335",
                "requestBody": {
                    "description": "Category details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "photo": {
                                        "description": "Category photo",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "name_ru": {
                                        "description": "Name of the category in Russian",
                                        "type": "string"
                                    },
                                    "name_en": {
                                        "description": "Name of the category in English",
                                        "type": "string"
                                    },
                                    "name_fr": {
                                        "description": "Name of the category in French",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Category created successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/all_category": {
            "get": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieves a list of all categories.",
                "operationId": "ee709f3f6fabeb41a4f33c6a06add9a8",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/single_page_category": {
            "get": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Get information of a single category",
                "description": "Retrieves information of a single category based on the provided category_id.",
                "operationId": "de9753536ba7d86a68449806b0525cc4",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "ID of the category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Category not found",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/update_category": {
            "post": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Update a category",
                "description": "Updates an existing category with the provided details.",
                "operationId": "5137db519eae626dd3cd21e94639bc26",
                "requestBody": {
                    "description": "Category details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "description": "ID of the category to update",
                                        "type": "integer"
                                    },
                                    "photo": {
                                        "description": "Category photo",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "name_ru": {
                                        "description": "Updated name of the category in Russian",
                                        "type": "string"
                                    },
                                    "name_en": {
                                        "description": "Updated name of the category in English",
                                        "type": "string"
                                    },
                                    "name_fr": {
                                        "description": "Updated name of the category in French",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Category updated successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/delete_category": {
            "delete": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes an existing category based on the provided category_id.",
                "operationId": "8fc6bb95c8db5d7ff0db9d9ac77e1231",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Category deleted successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/all_levels": {
            "get": {
                "tags": [
                    "Admin Levels"
                ],
                "summary": "Get all levels",
                "description": "Retrieves a list of all levels.",
                "operationId": "1c81491c8a01fa795ccc526c0057fe73",
                "responses": {
                    "200": {
                        "description": "Levels retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/single_page_level": {
            "get": {
                "tags": [
                    "Admin Levels"
                ],
                "summary": "Get information of a single level",
                "description": "Retrieves information of a single level based on the provided level_id.",
                "operationId": "baf12cfd067a63ba755efa05dd59098f",
                "parameters": [
                    {
                        "name": "level_id",
                        "in": "query",
                        "description": "ID of the level to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Level information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Level not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Level not found",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/update_level": {
            "post": {
                "tags": [
                    "Admin Levels"
                ],
                "summary": "Update level details",
                "description": "Updates the details of a level based on the provided level_id.",
                "operationId": "11f55b1ff8c0232e8489e727ec6e1c4d",
                "parameters": [
                    {
                        "name": "level_id",
                        "in": "query",
                        "description": "ID of the level to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated level details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the level",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Level details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Level details updated successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/create_level": {
            "post": {
                "tags": [
                    "Admin Levels"
                ],
                "summary": "Create a new level",
                "description": "Creates a new level with the provided details.",
                "operationId": "803513e6043f4ae4cd6a7bb23269e632",
                "requestBody": {
                    "description": "Level details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the new level",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Level created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Level created successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/login": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Admin Auth",
                "description": "Logs in a user and returns an access token.",
                "operationId": "df11fcd788132e5c373e50dbb6a43740",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "description": "Access token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Wrong email",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Wrong email or password",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/logout": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Logout user",
                "description": "Logs out the authenticated user and revokes the access token.",
                "operationId": "ea5c4b28120c6388ab818cbec1121f12",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Logout successful",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Unauthenticated",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/create_moderator": {
            "post": {
                "tags": [
                    "Admin Moderators"
                ],
                "summary": "Create a new moderator",
                "description": "Creates a new moderator user with the specified email, name, and password.",
                "operationId": "7e4ebcb9ee70f6386665c0fb133492bc",
                "requestBody": {
                    "description": "Moderator details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Moderator's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "name": {
                                        "description": "Moderator's name",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Moderator's password (min: 8 characters)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Moderator created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Moderator created successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/update_moderator": {
            "post": {
                "tags": [
                    "Admin Moderators"
                ],
                "summary": "Update moderator information",
                "description": "Updates the information of an existing moderator user.",
                "operationId": "cf4ca746ae6dc311c363f94c37429182",
                "requestBody": {
                    "description": "Moderator details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the moderator user to update",
                                        "type": "integer"
                                    },
                                    "email": {
                                        "description": "New email for the moderator",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "name": {
                                        "description": "New name for the moderator",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "New password for the moderator (min: 8 characters)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Moderator updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Moderator updated successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/single_page_moderator": {
            "get": {
                "tags": [
                    "Admin Moderators"
                ],
                "summary": "Get information of a single moderator",
                "description": "Retrieves information of a single moderator user based on the provided moderator_id.",
                "operationId": "045ab5753ed5d8ffc5ace782dac13524",
                "parameters": [
                    {
                        "name": "moderator_id",
                        "in": "query",
                        "description": "ID of the moderator user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moderator information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Moderator not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Not Found Moderator",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/get_all_moderators": {
            "get": {
                "tags": [
                    "Admin Moderators"
                ],
                "summary": "Get all moderators",
                "description": "Retrieves a paginated list of all moderators.",
                "operationId": "56d6af942503bf6422b4eef3e0941c7f",
                "responses": {
                    "200": {
                        "description": "Moderators retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/create_promo_code": {
            "post": {
                "tags": [
                    "Admin Promo Codes"
                ],
                "summary": "Create a new promo code",
                "description": "Creates a new promo code with the specified details.",
                "operationId": "6d005de21dd00cde42a2776937bdede4",
                "requestBody": {
                    "description": "Promo code details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "agent_id": {
                                        "description": "ID of the agent associated with the promo code",
                                        "type": "integer"
                                    },
                                    "code": {
                                        "description": "Promo code (min: 5 characters)",
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "description": "End date of the promo code (format: YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "job_count": {
                                        "description": "Number of jobs for the promo code to be valid",
                                        "type": "integer"
                                    },
                                    "discount": {
                                        "description": "Discount amount for the promo code",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo code created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Promo code created successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/single_page_promo_code": {
            "get": {
                "tags": [
                    "Admin Promo Codes"
                ],
                "summary": "Get information of a single promo code",
                "description": "Retrieves information of a single promo code based on the provided code_id.",
                "operationId": "8dd11548b350cb1632e5b80512c7378b",
                "parameters": [
                    {
                        "name": "code_id",
                        "in": "query",
                        "description": "ID of the promo code to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promo code information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Promo code not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Code Not found",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/update_promo_code": {
            "post": {
                "tags": [
                    "Admin Promo Codes"
                ],
                "summary": "Update promo code information",
                "description": "Updates the information of an existing promo code based on the provided code_id.",
                "operationId": "5205f110999e76c734228b1c8f0ac556",
                "requestBody": {
                    "description": "Promo code details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code_id": {
                                        "description": "ID of the promo code to update",
                                        "type": "integer"
                                    },
                                    "agent_id": {
                                        "description": "ID of the agent associated with the promo code",
                                        "type": "integer"
                                    },
                                    "code": {
                                        "description": "Promo code (min: 5 characters)",
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "description": "End date of the promo code (format: YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "job_count": {
                                        "description": "Number of jobs for the promo code to be valid",
                                        "type": "integer"
                                    },
                                    "discount": {
                                        "description": "Discount amount for the promo code",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo code information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Promo code updated successfully",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/admin/get_all_promo_codes": {
            "get": {
                "tags": [
                    "Admin Promo Codes"
                ],
                "summary": "Get all promo codes with optional search",
                "description": "Retrieves a paginated list of all promo codes with optional search functionality.",
                "operationId": "cc082607e0f39e02c3632ef5db7d607c",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search keyword to filter promo codes by code",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promo codes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/add_texts": {
            "post": {
                "tags": [
                    "Admin Texts"
                ],
                "summary": "Add texts",
                "description": "Add texts with optional photo and audio",
                "operationId": "addTexts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "photo": {
                                        "description": "Image file (jpeg, png, jpg, gif, webp)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_ru": {
                                        "description": "Audio file in Russian (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_en": {
                                        "description": "Audio file in English (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_fr": {
                                        "description": "Audio file in French (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "description": "Category ID (required)",
                                        "type": "integer"
                                    },
                                    "levels_id": {
                                        "description": "Levels ID (required)",
                                        "type": "integer"
                                    },
                                    "text_ru": {
                                        "description": "Text in Russian (required)",
                                        "type": "string"
                                    },
                                    "text_en": {
                                        "description": "Text in English (required)",
                                        "type": "string"
                                    },
                                    "text_fr": {
                                        "description": "Text in French (required)",
                                        "type": "string"
                                    },
                                    "title_ru": {
                                        "description": "Title in Russian",
                                        "type": "string"
                                    },
                                    "title_en": {
                                        "description": "Title in English",
                                        "type": "string"
                                    },
                                    "title_fr": {
                                        "description": "Title in French",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Text Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Text Created"
                                        },
                                        "text_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get_all_texts": {
            "get": {
                "tags": [
                    "Admin Texts"
                ],
                "summary": "Get all texts",
                "description": "Retrieve all texts with optional filters",
                "operationId": "getAllTexts",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID to filter texts by",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID to filter texts by",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "level_id",
                        "in": "query",
                        "description": "Level ID to filter texts by",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search keyword to filter texts by title in multiple languages",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/single_page_text": {
            "get": {
                "tags": [
                    "Admin Texts"
                ],
                "summary": "Get single text",
                "description": "Retrieve details of a single text by its ID",
                "operationId": "getSingleText",
                "parameters": [
                    {
                        "name": "text_id",
                        "in": "query",
                        "description": "ID of the text to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update_text": {
            "post": {
                "tags": [
                    "Admin Texts"
                ],
                "summary": "Update text",
                "description": "Update details of a text by its ID",
                "operationId": "updateText",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "photo": {
                                        "description": "Updated image file (jpeg, png, jpg, gif, webp)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio": {
                                        "description": "Updated audio file (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "text_id": {
                                        "description": "ID of the text to update (required)",
                                        "type": "integer"
                                    },
                                    "category_id": {
                                        "description": "Updated category ID (required)",
                                        "type": "integer"
                                    },
                                    "levels_id": {
                                        "description": "Updated levels ID (required)",
                                        "type": "integer"
                                    },
                                    "text_ru": {
                                        "description": "Updated text in Russian (required)",
                                        "type": "string"
                                    },
                                    "text_en": {
                                        "description": "Updated text in English (required)",
                                        "type": "string"
                                    },
                                    "text_fr": {
                                        "description": "Updated text in French (required)",
                                        "type": "string"
                                    },
                                    "title_ru": {
                                        "description": "Updated title in Russian (required)",
                                        "type": "string"
                                    },
                                    "title_en": {
                                        "description": "Updated title in English (required)",
                                        "type": "string"
                                    },
                                    "title_fr": {
                                        "description": "Updated title in French (required)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get_all_words": {
            "get": {
                "tags": [
                    "Admin Words"
                ],
                "summary": "Get all words",
                "description": "Get a list of words based on filters and search query",
                "operationId": "getAllWords",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter words by category ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "level_id",
                        "in": "query",
                        "description": "Filter words by level ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "text_id",
                        "in": "query",
                        "description": "Filter words by text ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query for words",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create_words": {
            "post": {
                "tags": [
                    "Admin Words"
                ],
                "summary": "Create Words",
                "description": "Create words with optional photo and audio",
                "operationId": "createWords",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "photo": {
                                        "description": "Image file (jpeg, png, jpg, gif, webp)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_ru": {
                                        "description": "Audio file in Russian (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_en": {
                                        "description": "Audio file in English (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_fr": {
                                        "description": "Audio file in French (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "description": "Category ID (required)",
                                        "type": "integer"
                                    },
                                    "levels_id": {
                                        "description": "Levels ID (required)",
                                        "type": "integer"
                                    },
                                    "text_id": {
                                        "description": "Text ID (required)",
                                        "type": "integer"
                                    },
                                    "word_ru": {
                                        "description": "Word in Russian (required)",
                                        "type": "string"
                                    },
                                    "word_en": {
                                        "description": "Word in English (required)",
                                        "type": "string"
                                    },
                                    "word_fr": {
                                        "description": "Word in French (required)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Word Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Word created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update_word": {
            "post": {
                "tags": [
                    "Admin Words"
                ],
                "summary": "Admin Words",
                "description": "Update details of a word by its ID",
                "operationId": "updateWord",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "photo": {
                                        "description": "Updated image file (jpeg, png, jpg, gif, webp)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_ru": {
                                        "description": "Updated audio file in Russian (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_en": {
                                        "description": "Updated audio file in English (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_fr": {
                                        "description": "Updated audio file in French (mpeg, wav, mp3)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "description": "Updated category ID (required)",
                                        "type": "integer"
                                    },
                                    "word_id": {
                                        "description": "ID of the word to update (required)",
                                        "type": "integer"
                                    },
                                    "levels_id": {
                                        "description": "Updated levels ID (required)",
                                        "type": "integer"
                                    },
                                    "text_id": {
                                        "description": "Updated text ID (required)",
                                        "type": "integer"
                                    },
                                    "word_ru": {
                                        "description": "Updated word in Russian (required)",
                                        "type": "string"
                                    },
                                    "word_en": {
                                        "description": "Updated word in English (required)",
                                        "type": "string"
                                    },
                                    "word_fr": {
                                        "description": "Updated word in French (required)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete_word": {
            "post": {
                "tags": [
                    "Admin Words"
                ],
                "summary": "Delete word",
                "description": "Delete a word by its ID",
                "operationId": "deleteWord",
                "parameters": [
                    {
                        "name": "word_id",
                        "in": "query",
                        "description": "ID of the word to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "404 word"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    }
}